<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Pendaftar extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Pendaftar_model');
    } 

    /*
     * Listing of pendaftars
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('pendaftar/index?');
        $config['total_rows'] = $this->Pendaftar_model->get_all_pendaftars_count();
        $this->pagination->initialize($config);

        $data['pendaftars'] = $this->Pendaftar_model->get_all_pendaftars($params);
        
        $data['_view'] = 'pendaftar/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new pendaftar
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('namapendaftar','Namapendaftar','required');
		$this->form_validation->set_rules('tempatlahir','Tempatlahir','required');
		$this->form_validation->set_rules('tgllahir','Tgllahir','required');
		$this->form_validation->set_rules('jenkel','Jenkel','required');
		$this->form_validation->set_rules('agama','Agama','required');
		$this->form_validation->set_rules('alamatlengkap','Alamatlengkap','required');
		$this->form_validation->set_rules('namaayah','Namaayah','required');
		$this->form_validation->set_rules('asalsekolah','Asalsekolah','required');
		$this->form_validation->set_rules('nomorhp','Nomorhp','required');
		$this->form_validation->set_rules('pekerjaanibu','Pekerjaanibu','required');
		$this->form_validation->set_rules('pekerjaanayah','Pekerjaanayah','required');
		$this->form_validation->set_rules('namaibu','Namaibu','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'jenkel' => $this->input->post('jenkel'),
				'namapendaftar' => $this->input->post('namapendaftar'),
				'tempatlahir' => $this->input->post('tempatlahir'),
				'tgllahir' => $this->input->post('tgllahir'),
				'agama' => $this->input->post('agama'),
				'alamatlengkap' => $this->input->post('alamatlengkap'),
				'kodealamat' => $this->input->post('kodealamat'),
				'namaayah' => $this->input->post('namaayah'),
				'namaibu' => $this->input->post('namaibu'),
				'pekerjaanayah' => $this->input->post('pekerjaanayah'),
				'pekerjaanibu' => $this->input->post('pekerjaanibu'),
				'nomorhp' => $this->input->post('nomorhp'),
				'asalsekolah' => $this->input->post('asalsekolah'),
				'tgldaftar' => $this->input->post('tgldaftar'),
				'filefoto' => $this->input->post('filefoto'),
            );
            
            $pendaftar_id = $this->Pendaftar_model->add_pendaftar($params);
            redirect('pendaftar/index');
        }
        else
        {            
            $data['_view'] = 'pendaftar/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a pendaftar
     */
    function edit($id)
    {   
        // check if the pendaftar exists before trying to edit it
        $data['pendaftar'] = $this->Pendaftar_model->get_pendaftar($id);
        
        if(isset($data['pendaftar']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('namapendaftar','Namapendaftar','required');
			$this->form_validation->set_rules('tempatlahir','Tempatlahir','required');
			$this->form_validation->set_rules('tgllahir','Tgllahir','required');
			$this->form_validation->set_rules('jenkel','Jenkel','required');
			$this->form_validation->set_rules('agama','Agama','required');
			$this->form_validation->set_rules('alamatlengkap','Alamatlengkap','required');
			$this->form_validation->set_rules('namaayah','Namaayah','required');
			$this->form_validation->set_rules('asalsekolah','Asalsekolah','required');
			$this->form_validation->set_rules('nomorhp','Nomorhp','required');
			$this->form_validation->set_rules('pekerjaanibu','Pekerjaanibu','required');
			$this->form_validation->set_rules('pekerjaanayah','Pekerjaanayah','required');
			$this->form_validation->set_rules('namaibu','Namaibu','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'jenkel' => $this->input->post('jenkel'),
					'namapendaftar' => $this->input->post('namapendaftar'),
					'tempatlahir' => $this->input->post('tempatlahir'),
					'tgllahir' => $this->input->post('tgllahir'),
					'agama' => $this->input->post('agama'),
					'alamatlengkap' => $this->input->post('alamatlengkap'),
					'kodealamat' => $this->input->post('kodealamat'),
					'namaayah' => $this->input->post('namaayah'),
					'namaibu' => $this->input->post('namaibu'),
					'pekerjaanayah' => $this->input->post('pekerjaanayah'),
					'pekerjaanibu' => $this->input->post('pekerjaanibu'),
					'nomorhp' => $this->input->post('nomorhp'),
					'asalsekolah' => $this->input->post('asalsekolah'),
					'tgldaftar' => $this->input->post('tgldaftar'),
					'filefoto' => $this->input->post('filefoto'),
                );

                $this->Pendaftar_model->update_pendaftar($id,$params);            
                redirect('pendaftar/index');
            }
            else
            {
                $data['_view'] = 'pendaftar/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The pendaftar you are trying to edit does not exist.');
    } 

    /*
     * Deleting pendaftar
     */
    function remove($id)
    {
        $pendaftar = $this->Pendaftar_model->get_pendaftar($id);

        // check if the pendaftar exists before trying to delete it
        if(isset($pendaftar['id']))
        {
            $this->Pendaftar_model->delete_pendaftar($id);
            redirect('pendaftar/index');
        }
        else
            show_error('The pendaftar you are trying to delete does not exist.');
    }
    
}
